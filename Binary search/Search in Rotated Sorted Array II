#include <bits/stdc++.h>
using namespace std;

//leetcode 81. Search in Rotated Sorted Array II

bool f(int nums[], int target, int n)
{
    int low = 0;
    int high = n - 1;
    while (low <= high)
    {
        int mid = (low + high) >> 1;
        if (nums[mid] == target)
            return true;

        // this condition is imp if the element is repeated in the array
        if (nums[mid] == nums[low] && nums[mid] == nums[high])
        {
            low++;
            high--;
        }
        else if (nums[low] <= nums[mid])
        {
            if (nums[low] <= target && nums[mid] > target)
            {
                high = mid - 1;
            }
            else
            {
                low = mid + 1;
            }
        }
        else
        {
            if (target > nums[mid] && target <= nums[high])
            {
                low = mid + 1;
            }
            else
                high = mid - 1;
        }
    }
    return false;
}

int main()
{
    int n, target;
    cin >> n >> target;
    int a[n];
    for (int i = 0; i < n; i++)
        cin >> a[i];
    bool ans = f(a, target, n);
    cout << ans;
    return 0;
}
